name: Build N1-test
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      kernel_version_66:
        description: "6.6系列内核版本号"
        required: true
        default: "6.6.102"
        type: string
      kernel_version_612:
        description: "6.12系列内核版本号"
        required: true
        default: "6.12.42"
        type: string
env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: openwrt_s905d_n1-lean-flippy

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build for ${{ matrix.flippy_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - flippy_name: k6.6
            kernel_version_input: ${{ github.event.inputs.kernel_version_66 }}
          - flippy_name: k6.12
            kernel_version_input: ${{ github.event.inputs.kernel_version_612 }}
    env:
      FLIPPY_NAME: ${{ matrix.flippy_name }}
      KERNEL_VERSION_RAW: ${{ matrix.kernel_version_input }}
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      run: |     
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        echo $PWD
        echo "WHOAMI=Akatsuki" >> $GITHUB_ENV
        echo "OPENWRT_VER=R25.8.1" >> $GITHUB_ENV
        echo "DISTRIB_DESCRIPTION=Unicorn" >> $GITHUB_ENV
        sudo mkdir -p /opt/kernel
        cd /opt
        git clone https://github.com/unifreq/openwrt_packit
        echo "DEVICE_NAME=N1" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
                
    - name: Download kernel
      run: |
        KERNEL_URL="https://github.com/ophub/kernel/releases/download/kernel_flippy/${KERNEL_VERSION_RAW}.tar.gz"
        echo "开始下载内核: ${KERNEL_URL}"
        sudo wget -q --show-progress -O /opt/kernel/${KERNEL_VERSION_RAW}.tar.gz "${KERNEL_URL}"
        echo "解压内核到/opt/kernel..."
        sudo tar -zxf /opt/kernel/${KERNEL_VERSION_RAW}.tar.gz -C /opt/kernel/ --strip-components=1
        echo "解压后的内核文件列表:"
        ls -l /opt/kernel/
                
    - name: Download rootfs
      run: |
        cd /opt/openwrt_packit
        wget https://github.com/MXJNZ6/op/releases/download/N1/openwrt-armsr-armv8-generic-rootfs.tar.gz
        
    - name: Install dependencies
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools uuid-runtime
        sudo -E apt-get -qq install git git-core pigz
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
    - name: Build image
      run: |
        sudo chmod -R 777 /opt
        mkdir /opt/openwrt_packit/tmp
        sudo mount -t tmpfs none /opt/openwrt_packit/tmp
        cd /opt/openwrt_packit
        
        # 生成whoami文件
        echo "生成whoami文件，内容如下："
        cat << EOF | sudo tee /opt/openwrt_packit/whoami
        WHOAMI="Akatsuki"
        OPENWRT_VER="R25.8.1"
        DISTRIB_DESCRIPTION="Unicorn"
        KERNEL_VERSION="${KERNEL_VERSION_RAW}-flippy-93+"
        EOF

        echo "whoami文件内容验证："
        cat /opt/openwrt_packit/whoami
        
        # 执行打包脚本
        sudo ./mk_s905d_n1.sh
        sudo cp files/openwrt-update-amlogic output/openwrt-update-amlogic
        
    - name: Compress files with pigz
      id: pigz
      run: |
        sudo chmod -R 777 /opt/openwrt_packit/output
        cd /opt/openwrt_packit/output
        sudo pigz -9 -p 2 *
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Check output files
      run: |
        cd /opt/openwrt_packit/output
        ls

    - name: Check disk usage
      if: (!cancelled())
      run: df -hT
      
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /opt/openwrt_packit/output
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware as artifact
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: "OpenWrt_${{ matrix.flippy_name }}_${{ env.FILE_DATE }}_${{ env.KERNEL_VERSION_RAW }}-flippy-93+"
        path: ${{ env.FIRMWARE }}
        
    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: "openwrt_s905d_n1-lean-flippy"
        allowUpdates: true
        tag: "s905d_n1"
        commit: master
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          This is OpenWrt firmware for N1
          * Firmware information
          Default IP地址: 192.168.1.1
          Default username: root
          Default password: 无/password
          Default WIFI name: Phicomm_n1
          Default WIFI password: password
        artifacts: ${{ env.FIRMWARE }}/*

  over:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Telegram notification
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=主人，N1盒子OpenWrt系统打包成功啦！"

    - name: Delete old workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 0
